---
- name : check ThreatIDR directory
  stat:
    path: /usr/share/nginx/html/threatidr
  register: threadidr_location

- name: ThreatIDR .env prepare 
  command: chdir=/usr/share/nginx/html/threatidr {{ item }}
  with_items:
  - cp .env.example .env

- name: Replace  DATABASE_URL line in .env file
  lineinfile:
    path: /usr/share/nginx/html/threatidr/.env
    search_string: 'DATABASE_URL'
    line: DATABASE_URL=postgresql+psycopg2://{{db_user}}:{{db_password}}@localhost/{{db_name}}
    owner: root
    group: root
    mode: '0644'

- name: Replace WHOIS_XML_API_KEY line in .env file
  lineinfile:
    path: /usr/share/nginx/html/threatidr/.env
    search_string: 'WHOIS_XML_API_KEY'
    line: WHOIS_XML_API_KEY={{ WHOIS_XML_API_KEY }}
    owner: root
    group: root
    mode: '0644'

- name: Replace VIRUS_TOTAL_API_KEY line in .env file
  lineinfile:
    path: /usr/share/nginx/html/threatidr/.env
    search_string: 'VIRUS_TOTAL_API_KEY'
    line: VIRUS_TOTAL_API_KEY={{ VIRUS_TOTAL_API_KEY }}
    owner: root
    group: root
    mode: '0644'

- name: ThreatIDR Install pipenv
  shell: pip3 install pipenv

- name: ThreatIDR pipenv intregation process
  command: chdir=/usr/share/nginx/html/threatidr/ {{ item }}
  with_items:
  - pipenv run bash -c "pipenv install"
  - pipenv run bash -c "pip install -r requirements.txt" 
  - pipenv run bash -c "pip install celery"
  - pipenv run bash -c "npm install"
  - pipenv run bash -c "flask db upgrade"
  - pipenv run bash -c "flask create-upload-dirs"
  - pipenv run bash -c "flask create-admin-user"
  - pipenv run bash -c "flask update-admin-password {{ TIDR_ADMIN_PASSWORD }}"
  - pipenv run bash -c "npm run build"
  when: threadidr_location.stat.exists